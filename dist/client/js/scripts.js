var app=angular.module("escapeApp",["ngResource","ui.router"]).config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("start",{url:"/",templateUrl:"views/start.html",controller:"startController as startCtrl"}).state("game",{url:"/game",templateUrl:"views/game.html",controller:"gameController as gameCtrl"})});app.factory("highScoresFactory",function($resource){var highScoresFactory={},HighScores=$resource("/api/highScores");return highScoresFactory.saveHighScore=function(player,round){HighScores.save({player:player,round:round})},highScoresFactory.getHighScores=function(){return HighScores.query().$promise.then(function(results){return results})},highScoresFactory.getScoreToBeat=function(){return HighScores.query().$promise.then(function(results){return results.length<10?0:results[9].round})},highScoresFactory}),app.factory("levelFactory",function($http){var _level={},levelFactory={};return levelFactory.getLevels=function(){return $http.get("js/levels.json").then(function(data){return data.data})},levelFactory.getLevel=function(){return $.isEmptyObject(_level)&&(_level=JSON.parse(localStorage.getItem("level"))),_level},levelFactory.setLevel=function(level){localStorage.setItem("level",JSON.stringify(level)),_level=level},levelFactory}),app.factory("powerupFactory",function($http){var powerupFactory={};return powerupFactory.getPowerups=function(){return $http.get("js/powerups.json").then(function(data){return data.data})},powerupFactory}),app.controller("gameController",["$state","levelFactory","powerupFactory","highScoresFactory",function($state,levelFactory,powerupFactory,highScoresFactory){function clearLevel(){clearInterval(lightTimer),clearInterval(enemyTimer)}function setIntervals(){enemyTimer=setInterval(moveEnemies,enemyMoveDuration),lightTimer=setInterval(toggleLights,Math.floor(Math.random()*toggleLightsDuration))}function handleHeroLoad(e){heroSpriteSheet=new createjs.SpriteSheet({images:[heroImg],frames:{width:64,height:64,regX:32,regY:32},animations:{walkRight:[0,2,"walkRight"],walkLeft:[3,5,"walkLeft"],walkUp:[0,2,"walkUp"],walkDown:[0,2,"walkDown"]}}),setUpLevel(roundNumber)}function drawHero(){hero=new createjs.Sprite(heroSpriteSheet);var heroStart=randomLocation();hero.x=heroStart[0],hero.y=heroStart[1],stage.addChild(hero)}function setUpLevel(roundNumber){clearInterval(lightTimer),clearInterval(enemyTimer),powerups=[],doorUnlocked=!1,heroMoveIncrement=5,lightsOnSoundID=level.lightsOnSoundID,enemySoundID=level.enemySoundID,createjs.Sound.registerSound("../audio/"+level.lightsOnSound,lightsOnSoundID),createjs.Sound.registerSound("../audio/"+level.enemySound,enemySoundID),stage=new createjs.Stage("canvas"),border=new createjs.Shape,border.graphics.ss(wallWidth).s("black").f("black").r(0,0,canvasWidth,canvasHeight),border.visible=!1,stage.addChild(border),sideWithDoor=Math.floor(4*Math.random());var r1=Math.floor(Math.random()*(canvasWidth-doorWidth))+doorWidth/2,r2=Math.floor(Math.random()*(canvasHeight-doorWidth))+doorWidth/2;switch(door=new createjs.Shape,sideWithDoor){case 0:doorPos=[r1,0],doorFrame1=r1-2*heroRadius,doorFrame2=r1+2*heroRadius,door.graphics.ss(wallWidth).s(doorColor).mt(r1-doorWidth/2,0).lt(r1+doorWidth/2,0).endStroke();break;case 1:doorPos=[canvasWidth,r2],doorFrame1=r2-2*heroRadius,doorFrame2=r2+2*heroRadius,door.graphics.ss(wallWidth).s(doorColor).mt(canvasWidth,r2-doorWidth/2).lt(canvasWidth,r2+doorWidth/2).endStroke();break;case 2:doorPos=[r1,canvasHeight],doorFrame1=r1-2*heroRadius,doorFrame2=r1+2*heroRadius,door.graphics.ss(wallWidth).s(doorColor).mt(r1-doorWidth/2,canvasHeight).lt(r1+doorWidth/2,canvasHeight).endStroke();break;default:doorPos=[0,r2],doorFrame1=r2-2*heroRadius,doorFrame2=r2+2*heroRadius,door.graphics.ss(wallWidth).s(doorColor).mt(0,r2-doorWidth/2).lt(0,r2+doorWidth/2).endStroke()}stage.addChild(door),powerupFactory.getPowerups().then(function(powerupList){for(var i=0;i<powerupList.length;i++)powerups.push(createPowerup(powerupList[i].name,powerupList[i].image,powerupList[i].sound))}),drawHero(),createjs.Ticker.addEventListener("tick",tick),createEnemies(roundNumber,"images/"+level.enemyImages),stage.update(),setIntervals()}function tick(){leftHeld&&(hero.x>=wallBuffer?hero.x-=heroMoveIncrement:hero.x>0?hero.x=0:3==sideWithDoor&&hero.y>doorFrame1&&hero.y<doorFrame2&&doorUnlocked&&success()),rightHeld&&(hero.x<=canvasWidth-wallBuffer-2*heroRadius?hero.x+=heroMoveIncrement:hero.x<canvasWidth-2*heroRadius?hero.x=canvasWidth-2*heroRadius:1==sideWithDoor&&hero.y>doorFrame1&&hero.y<doorFrame2&&doorUnlocked&&success()),upHeld&&(hero.y>=wallBuffer?hero.y-=heroMoveIncrement:hero.y>0?hero.y=0:0===sideWithDoor&&hero.x>doorFrame1&&hero.x<doorFrame2&&doorUnlocked&&success()),downHeld&&(hero.y<=canvasHeight-wallBuffer-2*heroRadius?hero.y+=heroMoveIncrement:hero.y<canvasHeight-2*heroRadius?hero.y=canvasHeight-2*heroRadius:2==sideWithDoor&&hero.x>doorFrame1&&hero.x<doorFrame2&&doorUnlocked&&success()),leftHeld&&!keyDown&&(hero.gotoAndPlay("walkLeft"),keyDown=!0),rightHeld&&!keyDown&&(hero.gotoAndPlay("walkRight"),keyDown=!0),upHeld&&!keyDown&&(hero.gotoAndPlay("walkUp"),keyDown=!0),downHeld&&!keyDown&&(hero.gotoAndPlay("walkDown"),keyDown=!0),checkPowerups(),stage.update()}function randomLocation(objectWidth){objectWidth="undefined"!=typeof objectWidth?objectWidth:20;var x=Math.floor(Math.random()*(canvasWidth-2*objectWidth))+objectWidth,y=Math.floor(Math.random()*(canvasHeight-2*objectWidth))+objectWidth;return[x,y]}function createPowerup(name,src,sound){var location=randomLocation();return p=new createjs.Bitmap("images/"+src),p.scaleX=.2,p.scaleY=.2,p.x=location[0],p.y=location[1],p.name=name,stage.addChild(p),createjs.Sound.registerSound("../audio/"+sound,name),p}function createEnemies(num,imgSource){enemies=new Map;for(var i=0;num>i;i++){for(var enemyStart=randomLocation();Math.abs(hero.x-enemyStart[0])<breathingRoom&&Math.abs(hero.y-enemyStart[1])<breathingRoom;)enemyStart=randomLocation();var enemy=new createjs.Bitmap(imgSource);enemy.scaleX=.7,enemy.scaleY=.7,enemy.x=enemyStart[0],enemy.y=enemyStart[1],enemies.set(i,enemy),stage.addChild(enemy)}}function areTouching(obj1,obj2){var xDiff=Math.abs(obj1.x-obj2.x),yDiff=Math.abs(obj1.y-obj2.y);return 2*heroRadius>=xDiff&&2*heroRadius>=yDiff}function moveLeft(){leftHeld=!0}function moveUp(){upHeld=!0}function moveRight(){rightHeld=!0}function moveDown(){downHeld=!0}function stopRight(){hero.gotoAndStop("walkRight"),rightHeld=!1,keyDown=!1}function stopLeft(){hero.gotoAndStop("walkLeft"),leftHeld=!1,keyDown=!1}function stopUp(){hero.gotoAndStop("walkUp"),upHeld=!1,keyDown=!1}function stopDown(){hero.gotoAndStop("walkDown"),downHeld=!1,keyDown=!1}function moveEnemies(){if(!gameCtrl.isPaused){for(var i=0;i<enemies.size;i++){var enemy=enemies.get(i);if(invisible){var direction=Math.floor(4*Math.random());switch(direction){case 0:enemy.x-=enemyMoveIncrement;break;case 1:enemy.x+=enemyMoveIncrement;break;case 2:enemy.y-=enemyMoveIncrement;break;case 3:enemy.y+=enemyMoveIncrement}}else{var xDiff=Math.abs(hero.x-enemy.x),yDiff=Math.abs(hero.y-enemy.y);xDiff>yDiff?hero.x>enemy.x?enemy.x+=enemyMoveIncrement:enemy.x-=enemyMoveIncrement:hero.y>enemy.y?enemy.y+=enemyMoveIncrement:enemy.y-=enemyMoveIncrement,!invincible&&areTouching(hero,enemy)&&(clearLevel(),gameOver())}}stage.update()}}function checkPowerups(){for(var i=0;i<powerups.length;i++)checkPowerup(powerups[i])}function checkPowerup(p){if(areTouching(hero,p)){activate(p.name),stage.removeChild(p),createjs.Sound.play(p.name);var index=powerups.indexOf(p);index>-1&&powerups.splice(index,1),stage.update()}}function activate(name){switch(name){case"speed":heroMoveIncrement*=2;break;case"cloak":invisible=!0,hero.visible=!1;break;case"shield":invincible=!0,invincibleTimer=setInterval(function(){invincible=!1,clearInterval(invincibleTimer)},invincibilityTimeLimit);break;case"key":doorUnlocked=!0;break;case"goggles":goggles=!0}}function toggleLights(){if(!gameCtrl.isPaused){lightsOn=!lightsOn;for(var soundTriggered=!1,i=0;i<enemies.size;i++){var enemy=enemies.get(i),xDiff=Math.abs(hero.x-enemy.x),yDiff=Math.abs(hero.y-enemy.y);lightsOn&&!soundTriggered&&enemySoundBuffer>xDiff&&enemySoundBuffer>yDiff&&(soundTriggered=!0,createjs.Sound.play(enemySoundID)),enemy.visible=lightsOn}for(var j=0;j<powerups.length;j++)powerups[j].visible=lightsOn;invisible||(hero.visible=lightsOn),lightsOn?(createjs.Sound.play(lightsOnSoundID),border.visible=!1):border.visible=!0,clearInterval(lightTimer),lightTimer=setInterval(toggleLights,Math.floor(Math.random()*toggleLightsDuration))}}function success(){setUpLevel(++roundNumber)}function logHighScore(){$("#highScoreForm").modal({keyboard:!1,backdrop:"static"}),highScore=roundNumber}function gameOver(){highScoresFactory.getScoreToBeat().then(function(results){scoreToBeat=results,roundNumber>=scoreToBeat?logHighScore():($("#gameOverModal").modal({keyboard:!1,backdrop:"static"}),$("#gameOverModal button").click(function(){$("#gameOverModal").modal("hide"),$(".modal-backdrop").remove()}))})}var stage,border,door,sideWithDoor,doorPos,doorFrame1,doorFrame2,hero,heroMoveIncrement,lightTimer,enemyTimer,invincibleTimer,lightsOnSoundID,enemySoundID,doorUnlocked,leftHeld,rightHeld,upHeld,downHeld,heroSpriteSheet,level=levelFactory.getLevel(),gameCtrl=this,doorWidth=50,doorColor="red",wallWidth=10,canvasWidth=1200,canvasHeight=800,heroRadius=10,enemyMoveIncrement=10,wallBuffer=2*heroRadius,lightsOn=!0,enemies=new Map,powerups=[],invincible=!1,invincibilityTimeLimit=8e3,breathingRoom=150,invisible=!1,goggles=!1,roundNumber=1,highScore=0,heroImg=new Image,keyDown=!1,toggleLightsDuration=2e3,enemyMoveDuration=300,enemySoundBuffer=100;gameCtrl.legendItems=[],gameCtrl.highScores=[],gameCtrl.isPaused=!1,powerupFactory.getPowerups().then(function(results){gameCtrl.legendItems=results}),heroImg.onload=handleHeroLoad,heroImg.src="images/"+level.heroImages,gameCtrl.createHighScore=function(){highScoresFactory.saveHighScore(gameCtrl.player,highScore),gameCtrl.player=""},gameCtrl.confirmQuit=function(){gameCtrl.pause()},gameCtrl.quit=function(){clearLevel(),$(".modal-backdrop").remove(),$state.go("start")},gameCtrl.highScoresClick=function(){gameCtrl.pause(),highScoresFactory.getHighScores().then(function(data){gameCtrl.highScores=data})},gameCtrl.pause=function(){clearInterval(lightTimer),clearInterval(enemyTimer),gameCtrl.isPaused=!0},gameCtrl.resume=function(){setIntervals(),gameCtrl.isPaused=!1},gameCtrl.restart=function(){roundNumber=1,setUpLevel(roundNumber)},$("#highScoreForm button[type='submit']").click(function(){gameCtrl.player&&gameCtrl.player.length>0&&($("#highScoreForm").modal("hide"),roundNumber=1,setUpLevel(roundNumber))}),$(document).keydown(function(event){switch(event.keyCode){case 75:moveLeft();break;case 79:moveUp();break;case 186:moveRight();break;case 76:moveDown();break;case 67:invisible=!1,hero.visible=!0}}),$(document).keyup(function(event){switch(event.keyCode){case 75:stopLeft();break;case 79:stopUp();break;case 186:stopRight();break;case 76:stopDown()}})}]),app.controller("startController",["levelFactory",function(levelFactory){function toggleLights(){lightsOn=!lightsOn,lightsOn||createjs.Sound.play(lightsOnSoundID),$(".start-menu").toggleClass("start-menu-background","no-background"),$(".darkness").toggleClass("darkness-background","no-background"),clearInterval(lightTimer),lightTimer=getToggleLightsInterval()}function getToggleLightsInterval(){return setInterval(toggleLights,Math.floor(3e3*Math.random()))}var startCtrl=this;startCtrl.selectedLevel=1;var lightTimer,lightsOnSoundID="thunder",lightsOn=!0;createjs.Sound.registerSound("../audio/Thunder1.mp3",lightsOnSoundID),lightTimer=getToggleLightsInterval(),levelFactory.getLevels().then(function(data){startCtrl.levels=data}),startCtrl.startLevel=function(){clearInterval(lightTimer);var level={};startCtrl.levels&&startCtrl.levels.length>0&&(level=startCtrl.levels[startCtrl.selectedLevel-1]),levelFactory.setLevel(level)}}]);